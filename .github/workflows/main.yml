name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/my-python-app:latest .

      # 4. Run tests inside the container
      - name: Run tests
        run: |
          docker run --rm $DOCKERHUB_USERNAME/my-python-app:latest python -m pytest tests_simple.py

      # 5. Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKERHUB_USERNAME/my-python-app:latest

      # 6. Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      # 7. Update kubeconfig to connect to EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      # 8. Deploy using Helm
      - name: Deploy with Helm
        run: |
          helm upgrade --install my-python-app charts/my-python-app \
            --namespace default \
            --values charts/my-python-app/values.yaml
